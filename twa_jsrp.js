// Generated by CoffeeScript 1.7.1
(function() {
  var format_jsrp, jsrp_objects, jsrp_svg, log, retrieve_all_pulse_objects;

  jsrp_objects = [];

  document.addEventListener("DOMContentLoaded", function() {
    jsrp_objects = retrieve_all_pulse_objects();
  });

  retrieve_all_pulse_objects = function() {
    var all_jsrp, jsrp_dom, _i, _len, _results;
    all_jsrp = document.querySelectorAll(".jsrp");
    _results = [];
    for (_i = 0, _len = all_jsrp.length; _i < _len; _i++) {
      jsrp_dom = all_jsrp[_i];
      _results.push(format_jsrp(jsrp_dom));
    }
    return _results;
  };

  format_jsrp = function(_jsrp_dom) {
    var parent_node, parent_tag;
    parent_tag = _jsrp_dom.parentNode.tagName;
    parent_node = _jsrp_dom.parentNode;
    if (parent_tag === "g") {
      parent_node = _jsrp_dom.parentNode.parentNode;
    }
    if (parent_node.tagName === "svg") {
      return new jsrp_svg(_jsrp_dom, parent_node);
    } else {

    }
  };

  jsrp_svg = (function() {
    function jsrp_svg(jsrp_dom, parent_node) {
      this.jsrp_dom = jsrp_dom;
      this.parent_node = parent_node;
      this.parse_color();
    }

    jsrp_svg.prototype.advance_color = function() {
      log("increment");
    };

    jsrp_svg.prototype.parse_color = function() {
      log("parse call");
    };

    return jsrp_svg;

  })();

  log = function(_statement) {
    return console.log(_statement);
  };

}).call(this);
